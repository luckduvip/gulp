/*TMODJS:{"version":"1.0.0"}*/
!function () {

    function template (filename, content) {
        return (
            /string|function/.test(typeof content)
            ? compile : renderFile
        )(filename, content);
    };


    var cache = template.cache = {};
    var String = this.String;

    function toString (value, type) {

        if (typeof value !== 'string') {

            type = typeof value;
            if (type === 'number') {
                value += '';
            } else if (type === 'function') {
                value = toString(value.call(value));
            } else {
                value = '';
            }
        }

        return value;

    };


    var escapeMap = {
        "<": "&#60;",
        ">": "&#62;",
        '"': "&#34;",
        "'": "&#39;",
        "&": "&#38;"
    };


    function escapeFn (s) {
        return escapeMap[s];
    }


    function escapeHTML (content) {
        return toString(content)
        .replace(/&(?![\w#]+;)|[<>"']/g, escapeFn);
    };


    var isArray = Array.isArray || function(obj) {
        return ({}).toString.call(obj) === '[object Array]';
    };


    function each (data, callback) {
        if (isArray(data)) {
            for (var i = 0, len = data.length; i < len; i++) {
                callback.call(data, data[i], i, data);
            }
        } else {
            for (i in data) {
                callback.call(data, data[i], i);
            }
        }
    };


    function resolve (from, to) {
        var DOUBLE_DOT_RE = /(\/)[^/]+\1\.\.\1/;
        var dirname = ('./' + from).replace(/[^/]+$/, "");
        var filename = dirname + to;
        filename = filename.replace(/\/\.\//g, "/");
        while (filename.match(DOUBLE_DOT_RE)) {
            filename = filename.replace(DOUBLE_DOT_RE, "/");
        }
        return filename;
    };


    var utils = template.utils = {

        $helpers: {},

        $include: function (filename, data, from) {
            filename = resolve(from, filename);
            return renderFile(filename, data);
        },

        $string: toString,

        $escape: escapeHTML,

        $each: each
        
    };


    var helpers = template.helpers = utils.$helpers;


    function renderFile (filename, data) {
        var fn = template.get(filename) || showDebugInfo({
            filename: filename,
            name: 'Render Error',
            message: 'Template not found'
        });
        return data ? fn(data) : fn; 
    };


    function compile (filename, fn) {

        if (typeof fn === 'string') {
            var string = fn;
            fn = function () {
                return new String(string);
            };
        }

        var render = cache[filename] = function (data) {
            try {
                return new fn(data, filename) + '';
            } catch (e) {
                return showDebugInfo(e)();
            }
        };

        render.prototype = fn.prototype = utils;
        render.toString = function () {
            return fn + '';
        };

        return render;
    };


    function showDebugInfo (e) {

        var type = "{Template Error}";
        var message = e.stack || '';

        if (message) {
            // 利用报错堆栈信息
            message = message.split('\n').slice(0,2).join('\n');
        } else {
            // 调试版本，直接给出模板语句行
            for (var name in e) {
                message += "<" + name + ">\n" + e[name] + "\n\n";
            }  
        }

        return function () {
            if (typeof console === "object") {
                console.error(type + "\n\n" + message);
            }
            return type;
        };
    };


    template.get = function (filename) {
        return cache[filename.replace(/^\.\//, '')];
    };


    template.helper = function (name, helper) {
        helpers[name] = helper;
    };


    if (typeof define === 'function') {define(function() {return template;});} else if (typeof exports !== 'undefined') {module.exports = template;} else {this.template = template;}
    template.helper('getStatus',function(status,type){
	if(status == 0){ //未处理
		if(type == 1){
			return "待牛人确定";
		}
		return "待确定";
	}else if(status == 1){ //导师确认
		return "待支付";
	}else if(status == 2){ //导师拒绝
		if(type == 1){
			return "已取消"
		}
		return "约见不成功";
	}else if(status == 3){ //已支付
		if(type == 1){
			return "已支付";
		}
		return "约见成功";
	}else if(status == 4){ //申请退款
		return "申请退款";
	}else if(status == 5){ //已退款
		return "已退款";
	}else if(status == 6){ //已完成
		return "已完成";
	}else if(status == 7){ //不退款
		return "不退款";
	}else if(status == 8){ //学生已取消
		if(type == 1){
			return "学生已取消";
		}
		return "已取消";
	}else if(status == 9){ //导师已取消
		if(type == 1){
			return "已取消";
		}
		return "导师已取消";
	}else if(status == 10){ //退款中已取消
		return "退款中";
	}
})
template.helper("handleDate",function(time){
	var d = new Date(time*1000);
	return d.Format("MM-dd hh:mm:ss");
})
template.helper("handleTime",function(time,type){
	if(type == 1){
		return time.substr(5,5);
	}
	return time.substr(-8,5);
})

    /*v:1*/
template('tpl/commentitem','{each list as val key} <dd> <div class="info"> <div class="common_user_head"> <img _src="{val.stu_img}" src="/Public/images/h5/png/user_icon.jpg" width="100%"> </div> <div class="info_right"> <div> <div>{val.stu_name}</div> <span class="common_month_info">{handleTime(val.add_time,1)}</span> <span class="common_time_info">{handleTime(val.add_time)}</span> </div> <div class="common_star_line"> {each [0,1,2,3,4] as val_v i} <a href="javascript:;" class="{if i < val.score}a_hover{/if}"></a> {/each} </div> </div> </div> <p class="question_area">{val.stu_content}</p> <p class="common_reply_area"> <span>牛人回复：</span>{val.tutor_content} </p> </dd> {/each} ');/*v:1*/
template('tpl/comments','{each list as val key} <dd> <div class="info"> <div class="common_user_head"> <img src="/Public/images/h5/png/user_icon.jpg" width="100%"/> </div> <div class="info_right"> <div> <div>大鹏</div> <span class="common_month_info">08-09</span> <span class="common_time_info">10:00:10</span> </div> <div class="common_star_level"> <a href="javascript:;" class="a_hover"></a> <a href="javascript:;" class="a_hover"></a> <a href="javascript:;" class="a_hover"></a> <a href="javascript:;" class="a_hover"></a> <a href="javascript:;" class=""></a> </div> </div> </div> <p class="question_area">关关于牛人关于牛人关于牛人关于牛人关于牛人关于牛人关于牛人于牛人</p> <p class="common_reply_area"> <span>牛人回复：</span>牛牛牛牛牛牛牛牛人回复人回复人回复人回复人回复人回复人回复人回复 </p> </dd> {/each} ');/*v:1*/
template('tpl/common_alert_win','<div id={_id} class="common_alert_win"> <p>{content}</p> <a href="javascript:;" class="win_close_a">关闭</a> </div> ');/*v:1*/
template('tpl/orderList','{each list as val key} <dd> <div class="dd_tit"> <span class="status">状态：{getStatus(val.status,type)}</span> <span class="name">{if type == "1"}{val.stu_name}{else}{val.tutor_name}{/if}</span>的约见 </div> <p>订单号：{val.order_no}<br/>提交时间:<span>{handleDate(val.add_time)}</span></p> <div class="price"> {if val.status == 0} {if type == 1} <a data-id="{val.order_id}" data-mobile="{val.tutor_mobile}" href="/H5/Order/tConfirmIndex/oid/{val.order_id}" data-val="{val.status}" class="">去确定</a> {else} <a data-id="{val.order_id}" data-status="8" data-mobile="{val.tutor_mobile}" href="javascript:;" data-val="{val.status}" class="order_btn">取消</a> {/if} {else if val.status == 1} {if type == 1} <a data-id="{val.order_id}" data-mobile="{val.tutor_mobile}" href="javascript:;" data-status="9" data-val="{val.status}" class="order_btn">取消约见</a> {else} <a data-id="{val.order_id}" data-mobile="{val.stu_mobile}" href="javascript:;" data-status="8" class="order_btn">取消</a><a data-id="{val.order_id}" data-mobile="{val.stu_mobile}" href="/H5/Order/stuConIndex/oid/{val.order_id}" data-status="8" class="">支付</a> {/if} {else if val.status == 2} {else if val.status == 3} {if type != 1} <a data-id="{val.order_id}" data-mobile="{val.stu_mobile}" href="javascript:;" data-status="4" class="order_btn">退款</a><a data-id="{val.order_id}" data-mobile="{val.stu_mobile}" href="javascript:;" data-status="6" class="order_btn">约见完成</a> {/if} {else if val.status == 4} {if type == 1} <a data-id="{val.order_id}" data-mobile={val.tutor_mobile}" data-status="10" href="javascript:;" data-val="{val.status}" class="order_btn">确认</a><a data-id="{val.order_id}" data-mobile={val.tutor_mobile}" href="javascript:;" data-status="7" class="order_btn">拒绝</a> {else} <a data-id="{val.order_id}" data-mobile="{val.stu_mobile}" href="javascript:;" data-status="6" class="order_btn">取消退款</a> {/if} {else if val.status == 6} {if type == 1} <a href="/H5/Comment/tutorCheckCom/stu_id/{val.stu_id}/tutor_id/{val.tutor_id}/order_id/{val.order_id}">查看点评</a><a href="/H5/Comment/tutorComIndex/stu_id/{val.stu_id}/tutor_id/{val.tutor_id}/order_id/{val.order_id}" class="">评价学员</a> {else} <a href="/H5/Comment/stuComIndex/stu_id/{val.stu_id}/tutor_id/{val.tutor_id}/tutor_name/{val.tutor_name}/amount/{val.amount}/order_id/{val.order_id}" class="">点评</a><a href="/H5/Comment/stuCheckCom/stu_id/{val.stu_id}/tutor_id/{val.tutor_id}/order_id/{val.order_id}" class="">牛人对我评论</a> {/if} {else} {/if} ￥{val.amount} </div> </dd> {/each} ');/*v:1*/
template('tpl/tutorIndex_list','{each list as val key} <dd idx="{key}"> <a href="/H5/User/tDetailIndex/tutor_id/{val.tutor_id}" class=""> <img src="/Public/images/h5/png/dd_bg.jpg" _src="{val.img_url}" class="bg lazyload" width="100%"/> <div class="sd"></div> <div class="location_icon">{val.teach_area}</div> <div class="info_area"> <div class="tutor_head"> <img src="/Public/images/h5/png/user_icon.jpg" _src="{val.img_url}" class="lazyload" width="80"/> </div> <img src="/Public/images/h5/png/icon_2.png" class="user_icon" width="44"/> <p> {val.user_name}<br/><span>{val.title}/{val.work_experience}年经验</span><span>{val.teach_num}人约见</span> </p> </div> </a> </dd> {/each} ');

}()